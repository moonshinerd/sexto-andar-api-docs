{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Bem-vindo ao Sistema Sexto Andar","text":""},{"location":"#sobre-o-projeto","title":"Sobre o Projeto","text":"<p>O Sistema Sexto Andar \u00e9 um projeto acad\u00eamico que simula uma plataforma de intermedia\u00e7\u00e3o imobili\u00e1ria. Desenvolvido em Java como trabalho pr\u00e1tico universit\u00e1rio, o sistema permite que usu\u00e1rios busquem im\u00f3veis, propriet\u00e1rios gerenciem seus im\u00f3veis e administradores controlem toda a plataforma.</p>"},{"location":"#o-que-voce-encontrara-aqui","title":"O que voc\u00ea encontrar\u00e1 aqui","text":"<p>Esta documenta\u00e7\u00e3o cont\u00e9m tudo o que voc\u00ea precisa saber sobre o sistema:</p> <ul> <li>Hist\u00f3rias de Usu\u00e1rio - Todas as funcionalidades do sistema organizadas por perfil</li> <li>Guia de Uso - Como navegar e utilizar cada funcionalidade  </li> <li>Arquitetura - Estrutura t\u00e9cnica e organiza\u00e7\u00e3o do c\u00f3digo</li> <li>Exemplos Pr\u00e1ticos - Demonstra\u00e7\u00f5es de como usar o sistema</li> </ul>"},{"location":"#comecando","title":"Come\u00e7ando","text":"<p>O sistema \u00e9 uma aplica\u00e7\u00e3o console simples e intuitiva. Para come\u00e7ar a explorar:</p> <ol> <li>Navegue pelas se\u00e7\u00f5es da documenta\u00e7\u00e3o no menu</li> <li>Veja as hist\u00f3rias de usu\u00e1rio para entender todas as funcionalidades</li> <li>Consulte o guia de uso para aprender a navegar no sistema</li> </ol>"},{"location":"#tipos-de-usuario","title":"Tipos de Usu\u00e1rio","text":""},{"location":"#usuario","title":"Usu\u00e1rio","text":"<p>Pessoas interessadas em alugar ou comprar im\u00f3veis. Podem visualizar propriedades, favoritar, agendar visitas e fazer propostas.</p>"},{"location":"#proprietario","title":"Propriet\u00e1rio","text":"<p>Donos de im\u00f3veis que desejam anunci\u00e1-los na plataforma. Podem cadastrar casas e apartamentos, gerenciar propostas e visitas.</p>"},{"location":"#administrador","title":"Administrador","text":"<p>Respons\u00e1veis pela modera\u00e7\u00e3o da plataforma. T\u00eam controle total sobre usu\u00e1rios, propriet\u00e1rios e im\u00f3veis cadastrados.</p> <p>Projeto desenvolvido como trabalho acad\u00eamico - UnB</p>"},{"location":"arquitetura/arquitetura-selecionada/","title":"Arquitetura Selecionada","text":""},{"location":"arquitetura/arquitetura-selecionada/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>Este documento descreve a arquitetura escolhida para o sistema Sexto Andar, detalhando como os componentes se organizam e interagem para formar uma aplica\u00e7\u00e3o web robusta e escal\u00e1vel.</p>"},{"location":"arquitetura/arquitetura-selecionada/#visao-geral","title":"Vis\u00e3o Geral","text":"<p>O sistema adota uma arquitetura REST em camadas combinada com o padr\u00e3o MVC (Model-View-Controller) adaptado para APIs. Esta escolha garante separa\u00e7\u00e3o clara de responsabilidades, facilita manuten\u00e7\u00e3o e permite escalabilidade horizontal.</p>"},{"location":"arquitetura/arquitetura-selecionada/#caracteristicas-principais","title":"Caracter\u00edsticas Principais:","text":"<ul> <li>API REST como interface de comunica\u00e7\u00e3o</li> <li>Arquitetura em camadas para organiza\u00e7\u00e3o do c\u00f3digo</li> <li>Separa\u00e7\u00e3o de responsabilidades entre componentes</li> <li>ORM para abstra\u00e7\u00e3o do banco de dados</li> <li>Containeriza\u00e7\u00e3o para deployment e portabilidade</li> </ul>"},{"location":"arquitetura/arquitetura-selecionada/#componentes-principais","title":"Componentes Principais","text":""},{"location":"arquitetura/arquitetura-selecionada/#1-camada-de-apresentacao-controller","title":"1. Camada de Apresenta\u00e7\u00e3o (Controller)","text":"<p>Implementada pelos routers do FastAPI, \u00e9 respons\u00e1vel por:</p> <ul> <li>Receber requisi\u00e7\u00f5es HTTP (GET, POST, PUT, DELETE)</li> <li>Validar par\u00e2metros e dados de entrada</li> <li>Chamar os servi\u00e7os apropriados</li> <li>Retornar respostas HTTP formatadas</li> <li>Documenta\u00e7\u00e3o autom\u00e1tica da API (Swagger/OpenAPI)</li> </ul>"},{"location":"arquitetura/arquitetura-selecionada/#2-camada-de-servicos-business-logic","title":"2. Camada de Servi\u00e7os (Business Logic)","text":"<p>Cont\u00e9m a l\u00f3gica de neg\u00f3cio da aplica\u00e7\u00e3o:</p> <ul> <li>Processamento das regras de neg\u00f3cio</li> <li>Valida\u00e7\u00f5es espec\u00edficas do dom\u00ednio</li> <li>Coordena\u00e7\u00e3o entre diferentes recursos</li> <li>Tratamento de exce\u00e7\u00f5es de neg\u00f3cio</li> <li>Implementa\u00e7\u00e3o dos casos de uso do sistema</li> </ul>"},{"location":"arquitetura/arquitetura-selecionada/#3-camada-de-repositorio-data-access","title":"3. Camada de Reposit\u00f3rio (Data Access)","text":"<p>Gerencia o acesso aos dados atrav\u00e9s do SQLAlchemy:</p> <ul> <li>Opera\u00e7\u00f5es CRUD (Create, Read, Update, Delete)</li> <li>Queries personalizadas ao banco de dados</li> <li>Abstra\u00e7\u00e3o da persist\u00eancia de dados</li> <li>Implementa\u00e7\u00e3o de padr\u00f5es como Repository e Unit of Work</li> </ul>"},{"location":"arquitetura/arquitetura-selecionada/#4-camada-de-modelo-entities","title":"4. Camada de Modelo (Entities)","text":"<p>Define as entidades do dom\u00ednio:</p> <ul> <li>Models SQLAlchemy: Mapeamento objeto-relacional das tabelas</li> <li>Pydantic Models: Valida\u00e7\u00e3o e serializa\u00e7\u00e3o de dados</li> <li>DTOs (Data Transfer Objects): Objetos para transfer\u00eancia de dados</li> <li>Relacionamentos entre entidades</li> </ul>"},{"location":"arquitetura/arquitetura-selecionada/#padrao-mvc-adaptado","title":"Padr\u00e3o MVC Adaptado","text":""},{"location":"arquitetura/arquitetura-selecionada/#model-modelo","title":"Model (Modelo)","text":"<ul> <li>Entidades SQLAlchemy: Representam as tabelas do banco</li> <li>Pydantic Models: Valida\u00e7\u00e3o e serializa\u00e7\u00e3o</li> <li>Reposit\u00f3rios: Acesso aos dados</li> <li>Respons\u00e1vel pela persist\u00eancia e regras de dados</li> </ul>"},{"location":"arquitetura/arquitetura-selecionada/#view-visao","title":"View (Vis\u00e3o)","text":"<ul> <li>Pydantic Serializers: Valida\u00e7\u00e3o e serializa\u00e7\u00e3o de dados da API</li> <li>Frontend React: Interface de usu\u00e1rio e componentes visuais</li> <li>Respostas JSON: Dados formatados pela API</li> <li>Documenta\u00e7\u00e3o Swagger: Interface de documenta\u00e7\u00e3o</li> <li>Respons\u00e1vel pela apresenta\u00e7\u00e3o dos dados (API e UI)</li> </ul>"},{"location":"arquitetura/arquitetura-selecionada/#controller-controlador","title":"Controller (Controlador)","text":"<ul> <li>FastAPI Routers: Endpoints da API</li> <li>Services: L\u00f3gica de neg\u00f3cio</li> <li>Middleware: Intercepta\u00e7\u00e3o de requisi\u00e7\u00f5es</li> <li>Respons\u00e1vel pelo fluxo de controle da aplica\u00e7\u00e3o</li> </ul>"},{"location":"arquitetura/arquitetura-selecionada/#utilizacao-do-orm","title":"Utiliza\u00e7\u00e3o do ORM","text":"<p>O SQLAlchemy atua como camada de abstra\u00e7\u00e3o entre a aplica\u00e7\u00e3o e o banco de dados PostgreSQL:</p>"},{"location":"arquitetura/arquitetura-selecionada/#mapeamento-objeto-relacional","title":"Mapeamento Objeto-Relacional","text":"<ul> <li>Classes Python mapeadas para tabelas do banco</li> <li>Relacionamentos declarativos entre entidades</li> <li>Lazy loading e eager loading de dados relacionados</li> </ul>"},{"location":"arquitetura/arquitetura-selecionada/#session-management","title":"Session Management","text":"<ul> <li>Gerenciamento autom\u00e1tico de transa\u00e7\u00f5es</li> <li>Connection pooling para performance</li> <li>Rollback autom\u00e1tico em caso de erro</li> </ul>"},{"location":"arquitetura/arquitetura-selecionada/#query-builder","title":"Query Builder","text":"<ul> <li>Queries expressivas em Python</li> <li>Prote\u00e7\u00e3o contra SQL injection</li> <li>Otimiza\u00e7\u00e3o autom\u00e1tica de consultas</li> </ul>"},{"location":"arquitetura/arquitetura-selecionada/#fluxo-de-requisicao","title":"Fluxo de Requisi\u00e7\u00e3o","text":"<ol> <li>Cliente faz requisi\u00e7\u00e3o HTTP para a API</li> <li>FastAPI Router recebe e valida a requisi\u00e7\u00e3o</li> <li>Service Layer processa a l\u00f3gica de neg\u00f3cio</li> <li>Repository acessa dados via SQLAlchemy</li> <li>SQLAlchemy executa queries no PostgreSQL</li> <li>Resposta \u00e9 formatada e retornada ao cliente</li> </ol>"},{"location":"arquitetura/arquitetura-selecionada/#beneficios-da-arquitetura","title":"Benef\u00edcios da Arquitetura","text":"<ul> <li>Manutenibilidade: C\u00f3digo organizado em camadas</li> <li>Testabilidade: Cada camada pode ser testada isoladamente</li> <li>Escalabilidade: Componentes podem escalar independentemente</li> <li>Flexibilidade: F\u00e1cil altera\u00e7\u00e3o de implementa\u00e7\u00f5es espec\u00edficas</li> <li>Reusabilidade: Servi\u00e7os podem ser reutilizados por diferentes controllers</li> </ul>"},{"location":"arquitetura/tecnologias/","title":"Tecnologias Utilizadas","text":""},{"location":"arquitetura/tecnologias/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>Este documento apresenta as principais tecnologias selecionadas para o desenvolvimento do sistema Sexto Andar. A escolha dessas tecnologias foi baseada em crit\u00e9rios como performance, escalabilidade, facilidade de manuten\u00e7\u00e3o e suporte da comunidade.</p> <p>O projeto utiliza uma arquitetura moderna separando claramente as responsabilidades entre backend (API REST), frontend (interface de usu\u00e1rio), banco de dados (persist\u00eancia) e infraestrutura (deployment e gerenciamento).</p> <p>Cada tecnologia foi cuidadosamente avaliada para garantir a melhor experi\u00eancia tanto para desenvolvedores quanto para usu\u00e1rios finais, priorizando ferramentas maduras e amplamente adotadas no mercado.</p>"},{"location":"arquitetura/tecnologias/#backend","title":"Backend","text":"Tecnologia Imagem Descri\u00e7\u00e3o Fastapi Framework web moderno e de alta performance para constru\u00e7\u00e3o de APIs com Python. Oferece valida\u00e7\u00e3o autom\u00e1tica de dados, documenta\u00e7\u00e3o interativa autom\u00e1tica (Swagger/OpenAPI) e suporte nativo para programa\u00e7\u00e3o ass\u00edncrona. SQLAlchemy ORM (Object-Relational Mapping) Python que facilita a intera\u00e7\u00e3o com bancos de dados relacionais. Oferece mapeamento autom\u00e1tico entre objetos Python e tabelas de banco, query builder, migrations e suporte a m\u00faltiplos SGBDs."},{"location":"arquitetura/tecnologias/#frontend","title":"Frontend","text":"Tecnologia Imagem Descri\u00e7\u00e3o React Biblioteca JavaScript para constru\u00e7\u00e3o de interfaces de usu\u00e1rio interativas. Baseada em componentes reutiliz\u00e1veis, oferece um virtual DOM para alta performance, gerenciamento de estado eficiente e um ecossistema rico de ferramentas e bibliotecas."},{"location":"arquitetura/tecnologias/#banco-de-dados","title":"Banco de Dados","text":"Tecnologia Imagem Descri\u00e7\u00e3o PostgreSQL Sistema de gerenciamento de banco de dados relacional de c\u00f3digo aberto. Oferece conformidade com padr\u00f5es SQL, suporte a transa\u00e7\u00f5es ACID, recursos avan\u00e7ados como \u00edndices, views materializadas e extensibilidade atrav\u00e9s de fun\u00e7\u00f5es customizadas."},{"location":"arquitetura/tecnologias/#infraestrutura","title":"Infraestrutura","text":"Tecnologia Imagem Descri\u00e7\u00e3o Docker Plataforma de containeriza\u00e7\u00e3o que permite empacotar aplica\u00e7\u00f5es e suas depend\u00eancias em containers leves e port\u00e1veis. Facilita o deployment, escalabilidade e garante consist\u00eancia entre ambientes de desenvolvimento, teste e produ\u00e7\u00e3o. pgAdmin Ferramenta de administra\u00e7\u00e3o e gerenciamento web para PostgreSQL. Oferece interface gr\u00e1fica intuitiva para executar consultas SQL, gerenciar usu\u00e1rios, monitorar performance, criar backups e administrar bancos de dados PostgreSQL de forma visual."},{"location":"backlog/userStories/","title":"Hist\u00f3rias de Usu\u00e1rio","text":""},{"location":"backlog/userStories/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>Este documento apresenta as hist\u00f3rias de usu\u00e1rio do sistema Sexto Andar, uma plataforma para gerenciamento de im\u00f3veis que conecta usu\u00e1rios interessados em alugar ou comprar im\u00f3veis com propriet\u00e1rios que desejam disponibiliz\u00e1-los.</p> <p>O sistema possui tr\u00eas tipos de usu\u00e1rios principais: Usu\u00e1rios Comuns (interessados em im\u00f3veis), Propriet\u00e1rios (donos de im\u00f3veis) e Administradores (gestores da plataforma). Cada perfil possui funcionalidades espec\u00edficas que atendem \u00e0s suas necessidades no processo de loca\u00e7\u00e3o e venda de im\u00f3veis.</p> <p>As hist\u00f3rias foram priorizadas usando o m\u00e9todo MoSCoW considerando o valor para o neg\u00f3cio e depend\u00eancias entre funcionalidades.</p>"},{"location":"backlog/userStories/#historias-priorizadas","title":"Hist\u00f3rias Priorizadas","text":""},{"location":"backlog/userStories/#usuario-comum","title":"Usu\u00e1rio Comum","text":"ID Hist\u00f3ria Prioridade US01 Como usu\u00e1rio, quero me cadastrar como \"Usu\u00e1rio\" para poder acessar im\u00f3veis, favoritar, agendar visitas e fazer propostas. Must have US02 Como usu\u00e1rio, quero fazer login como \"Usu\u00e1rio\" para acessar minhas funcionalidades espec\u00edficas. Must have US03 Como usu\u00e1rio, quero visualizar uma lista de im\u00f3veis dispon\u00edveis para encontrar op\u00e7\u00f5es que me interessem. Must have US04 Como usu\u00e1rio, quero editar meus dados pessoais (nome, celular, email, senha) para manter minhas informa\u00e7\u00f5es atualizadas. Should have US05 Como usu\u00e1rio, quero favoritar im\u00f3veis para salv\u00e1-los em minha lista de interesse. Should have US06 Como usu\u00e1rio, quero desfavoritar im\u00f3veis que n\u00e3o me interessam mais. Could have US07 Como usu\u00e1rio, quero visualizar meus im\u00f3veis favoritos e realizar a\u00e7\u00f5es r\u00e1pidas (visita, proposta) sobre eles. Should have US08 Como usu\u00e1rio, quero ver a quantidade de im\u00f3veis favoritados no meu perfil. Could have US09 Como usu\u00e1rio, quero agendar visitas a im\u00f3veis informando a data desejada. Must have US10 Como usu\u00e1rio, quero enviar propostas para im\u00f3veis informando o valor oferecido. Must have US11 Como usu\u00e1rio, quero deslogar ou sair do sistema a qualquer momento. Should have"},{"location":"backlog/userStories/#proprietario","title":"Propriet\u00e1rio","text":"ID Hist\u00f3ria Prioridade US12 Como propriet\u00e1rio, quero me cadastrar como \"Propriet\u00e1rio\" para poder cadastrar e gerenciar meus im\u00f3veis. Must have US13 Como propriet\u00e1rio, quero fazer login como \"Propriet\u00e1rio\" para acessar minhas funcionalidades espec\u00edficas. Must have US14 Como propriet\u00e1rio, quero cadastrar casas informando: endere\u00e7o, tamanho, descri\u00e7\u00e3o, valor, tipo de venda (aluguel/venda), pre\u00e7o do terreno e se \u00e9 casa \u00fanica no terreno. Must have US15 Como propriet\u00e1rio, quero cadastrar apartamentos informando: endere\u00e7o, tamanho, descri\u00e7\u00e3o, valor, tipo de venda, pre\u00e7o do condom\u00ednio, \u00e1rea de conviv\u00eancia, andar e se permite pets. Must have US16 Como propriet\u00e1rio, quero visualizar meus im\u00f3veis cadastrados para acompanhar meu portf\u00f3lio. Must have US17 Como propriet\u00e1rio, quero editar meus dados pessoais (nome, celular, email, senha) para manter minhas informa\u00e7\u00f5es atualizadas. Should have US18 Como propriet\u00e1rio, quero ver a quantidade de im\u00f3veis cadastrados no meu perfil. Could have US19 Como propriet\u00e1rio, quero remover im\u00f3veis cadastrados quando necess\u00e1rio. Should have US20 Como propriet\u00e1rio, quero visualizar todas as propostas recebidas para meus im\u00f3veis com detalhes do usu\u00e1rio interessado. Must have US21 Como propriet\u00e1rio, quero visualizar todas as visitas agendadas para meus im\u00f3veis com detalhes do usu\u00e1rio interessado. Must have US22 Como propriet\u00e1rio, quero ver o status das visitas (realizada ou n\u00e3o). Should have US23 Como propriet\u00e1rio, quero deslogar ou sair do sistema a qualquer momento. Should have"},{"location":"backlog/userStories/#administrador","title":"Administrador","text":"ID Hist\u00f3ria Prioridade US24 Como administrador, quero acessar o sistema sem necessidade de cadastro pr\u00e9vio. Won't have US25 Como administrador, quero visualizar todos os usu\u00e1rios cadastrados (com pagina\u00e7\u00e3o de 15 em 15). Could have US26 Como administrador, quero editar dados de qualquer usu\u00e1rio (nome, celular, email, senha). Could have US27 Como administrador, quero excluir contas de usu\u00e1rios quando necess\u00e1rio. Could have US28 Como administrador, quero visualizar todos os propriet\u00e1rios cadastrados (com pagina\u00e7\u00e3o de 15 em 15). Could have US29 Como administrador, quero editar dados de qualquer propriet\u00e1rio (nome, celular, email, senha). Could have US30 Como administrador, quero excluir contas de propriet\u00e1rios quando necess\u00e1rio. Could have US31 Como administrador, quero visualizar todos os im\u00f3veis cadastrados no sistema (com embaralhamento e pagina\u00e7\u00e3o). Could have US32 Como administrador, quero excluir im\u00f3veis cadastrados por propriet\u00e1rios quando necess\u00e1rio. Could have US33 Como administrador, quero buscar usu\u00e1rios e propriet\u00e1rios por email para edi\u00e7\u00e3o/exclus\u00e3o. Could have"},{"location":"backlog/userStories/#sistema-e-funcionalidades-tecnicas","title":"Sistema e Funcionalidades T\u00e9cnicas","text":"ID Hist\u00f3ria Prioridade US34 Como usu\u00e1rio do sistema, quero que os im\u00f3veis sejam exibidos com filtros por tipo (casa/apartamento) e tipo de venda (aluguel/venda). Should have US35 Como usu\u00e1rio do sistema, quero que os im\u00f3veis sejam mostrados de forma embaralhada para variedade. Could have US36 Como usu\u00e1rio do sistema, quero que as listas tenham pagina\u00e7\u00e3o (15 itens por p\u00e1gina) para melhor navega\u00e7\u00e3o. Should have US37 Como usu\u00e1rio do sistema, quero ver diferencia\u00e7\u00e3o entre aluguel e venda nos valores dos im\u00f3veis. Should have US38 Como usu\u00e1rio do sistema, quero que as propostas e visitas tenham IDs \u00fanicos para rastreamento. Must have US39 Como propriet\u00e1rio, quero que o sistema calcule automaticamente o valor total dos im\u00f3veis com todas as taxas. Could have"},{"location":"backlog/userStories/#legenda-metodo-moscow","title":"Legenda - M\u00e9todo MoSCoW","text":"<ul> <li>Must have: Funcionalidades essenciais e cr\u00edticas para o sistema</li> <li>Should have: Funcionalidades importantes que agregam valor significativo</li> <li>Could have: Funcionalidades desej\u00e1veis que podem ser implementadas se houver tempo</li> <li>Won't have: Funcionalidades que n\u00e3o ser\u00e3o implementadas nesta vers\u00e3o</li> </ul>"},{"location":"diagramas/diagrama-classes/","title":"Diagrama de Classes","text":""},{"location":"diagramas/diagrama-classes/#diagrama","title":"Diagrama","text":""},{"location":"diagramas/diagrama-classes/#classes-principais","title":"Classes Principais","text":""},{"location":"diagramas/diagrama-classes/#account-classe-abstrata","title":"Account (Classe Abstrata)","text":"<ul> <li><code>id: UUID</code></li> <li><code>username: String</code></li> <li><code>fullName: String</code></li> <li><code>phoneNumber: String</code></li> <li><code>email: EmailType</code></li> <li><code>password: String</code></li> </ul>"},{"location":"diagramas/diagrama-classes/#user","title":"User","text":"<p>Herda de Account</p>"},{"location":"diagramas/diagrama-classes/#propertyowner","title":"PropertyOwner","text":"<p>Herda de Account</p>"},{"location":"diagramas/diagrama-classes/#property","title":"Property","text":"<ul> <li><code>id: UUID</code></li> <li><code>idPropertyOwner: UUID</code></li> <li><code>propertySize: Numeric(10,10)</code></li> <li><code>description: String</code></li> <li><code>propertyValue: Numeric(10,2)</code></li> <li><code>publishDate: DateTime</code></li> <li><code>condominiumFee: Numeric(10,2)</code></li> <li><code>commonArea: Boolean</code></li> <li><code>floor: Integer</code></li> <li><code>isPetAllowed: Boolean</code></li> </ul>"},{"location":"diagramas/diagrama-classes/#proposal","title":"Proposal","text":"<ul> <li><code>id: UUID</code></li> <li><code>idProperty: UUID</code></li> <li><code>idUser: UUID</code></li> <li><code>proposalDate: DateTime</code></li> <li><code>proposalValue: Numeric(10,2)</code></li> </ul>"},{"location":"diagramas/diagrama-classes/#visit","title":"Visit","text":"<ul> <li><code>id: UUID</code></li> <li><code>idProperty: UUID</code></li> <li><code>idUser: UUID</code></li> <li><code>visitDate: DateTime</code></li> <li><code>isVisitCompleted: Boolean</code></li> </ul>"},{"location":"diagramas/diagrama-classes/#address","title":"Address","text":"<ul> <li><code>id: UUID</code></li> <li><code>street: String</code></li> <li><code>number: String</code></li> <li><code>city: String</code></li> <li><code>postal_code: String</code></li> <li><code>country: String</code></li> </ul>"},{"location":"diagramas/diagrama-classes/#enumeracoes","title":"Enumera\u00e7\u00f5es","text":""},{"location":"diagramas/diagrama-classes/#salestype","title":"SalesType","text":"<ul> <li>Rent (Aluguel)</li> <li>Sale (Venda)</li> </ul>"},{"location":"diagramas/diagrama-classes/#propertytype","title":"PropertyType","text":"<ul> <li>Apartment (Apartamento)</li> <li>House (Casa)</li> </ul>"}]}